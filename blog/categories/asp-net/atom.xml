<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ASP.NET | Alex Belozerov Blog]]></title>
  <link href="http://abelozerov.com/blog/categories/asp-net/atom.xml" rel="self"/>
  <link href="http://abelozerov.com/"/>
  <updated>2016-05-04T11:31:37+06:00</updated>
  <id>http://abelozerov.com/</id>
  <author>
    <name><![CDATA[Alex Belozerov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ASP.NET: Redirect с параметром без QueryString]]></title>
    <link href="http://abelozerov.com/blog/2009/09/26/aspnet-redirect-querystring/"/>
    <updated>2009-09-26T17:38:00+07:00</updated>
    <id>http://abelozerov.com/blog/2009/09/26/aspnet-redirect-querystring</id>
    <content type="html"><![CDATA[<div class='post'>
Столкнулся с ситуацией, когда необходимо сделать Redirect на другую страницу, передав при этом параметр, но так, чтобы не видел пользователь. То есть простая передача через QueryString - Response.Redirect("~/NewPage.aspx?id=5") - не подходит.<br /><div><br /></div><div>Я придумал решение, используя QueryString и Session<!-- more -->:<br /></div><div><br /></div><div><b>Пример:</b> <br /></div><div>надо передать параметр id на страницу NewPage.aspx<br /></div><div><br /></div><div>Сам редирект делаем как обычно, параметр передаем через QueryString.<br /></div><pre class="c-sharp" name="code">Response.Redirect("~/NewPage.aspx?id=5")<br /></pre><div><br /></div><div>Но принимающая страница по-особому обрабатывает запрос:<br /></div><pre class="c-sharp" name="code">public partial class NewPage : System.Web.UI.Page<br />{<br />    protected void Page_Init(object sender, EventArgs e)<br />    {<br />        if (Session["NewPage_id"] != null)<br />        {<br />            // Второй запрос приходит сюда<br />            int id = Int32.Parse(Session["NewPage_id"].ToString());<br />            // Используем id<br />            // ...<br /><br />            // Освобождаем память<br />            Session["NewPage_id"] = null;<br />        }<br />        else if (Request["id"] != null)<br />        {<br />            // Первый запрос приходит сюда<br />            Session["NewPage_id"] = Request["id"];<br />            // Редирект без QueryString<br />            Response.Redirect(GetUriWithoutQueryStr(Request.Url), true);<br />        }<br />    }<br /><br />    public string GetUriWithoutQueryStr(Uri url)<br />    {<br />        return url.GetLeftPart(UriPartial.Path);<br />    }<br />}<br /></pre><div>Мы сохраняем пришедший параметр в сессию, и редиректимся на эту же страницу без QueryString. При второй загрузке параметры спокойно извлекаются из сессии и используются. Пользователь, естественно, в строке запроса никаких параметров не видит.<br /></div><div>После извлечения параметра лучше сразу удалить его из сессии, чтобы он не повлиял на последующие запросы.<br /></div><div><br />А как вы решали подобную задачу? :-)<br /></div></div>


<h2>Archived comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'><em>alex</em></div>
<div class='content'>
Вы правы, в рамках одного веб-приложения хранение в Session и Server.Transfer покрывают все возможные ситуации<br /><br />Однако представьте, что нужно отправить форму удаленному серверу, и ответом должен быть редирект на другую страницу с необходимыми параметрами. И мы хотим, чтобы ползователь параметров не увидел. Вот тут-то и пригодится способ, описанный в этой статье.</div>
</div>
<div class='comment'>
<div class='author'><em>Руслан</em></div>
<div class='content'>
А еще лучше Server.Transfer() использовать - так меньше ресурсов жрем. Но опять же в рамках одного приложения</div>
</div>
<div class='comment'>
<div class='author'><em>Roman2311</em></div>
<div class='content'>
Понятно.<br /><br />Ну может тогда через твиттер передавать параметры :)</div>
</div>
<div class='comment'>
<div class='author'><em>alex</em></div>
<div class='content'>
Важное замечание, Роман!<br /><br />Действительно, нет смысла так извращаться, если редирект происходит на страницу, находящуюся в том же web-приложении (т.е. обе страницы имеют доступ одной и той же Session).<br /><br />Мой способ может пригодиться, если редирект приходит с другого сервера</div>
</div>
<div class='comment'>
<div class='author'><em>Roman2311</em></div>
<div class='content'>
Может я что-то не так понял, но почему бы просто не сделать:<br /><br /><i><br />Session[&quot;NewPage_id&quot;] = 5;<br />Response.Redirect(&quot;~/NewPage.aspx&quot;);<br /></i><br /><br />Я нутром чувствую, что все на так просто... но все же</div>
</div>
</div>

]]></content>
  </entry>
  
</feed>
